apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: openobserve-collector-gateway
  namespace: openobserve
spec:
  config:
    connectors:
      servicegraph:
        dimensions:
          - http.method
        latency_histogram_buckets:
          - 1
          - 2
          - 3
          - 4
          - 5
        store:
          max_items: 10
          ttl: 1s
      spanmetrics:
        aggregation_temporality: AGGREGATION_TEMPORALITY_CUMULATIVE
        dimensions:
          - default: GET
            name: http.method
          - name: http.status_code
        dimensions_cache_size: 1000
        exemplars:
          enabled: true
        histogram:
          explicit:
            buckets:
              - 100us
              - 1ms
              - 2ms
              - 6ms
              - 10ms
              - 100ms
              - 250ms
              - 500ms
              - 1000ms
              - 1400ms
              - 2000ms
              - 5s
              - 10s
              - 30s
              - 60s
              - 120s
              - 300s
              - 600s
        metrics_flush_interval: 15s
    exporters:
      otlphttp/openobserve:
        endpoint: http://openobserve-openobserve-standalone.openobserve.svc.local.kronform.pius.dev:5080/api/default/
        headers:
          Authorization: ENC[AES256_GCM,data:TD09bUc83DB6/e+3TGd356RxKP4Yu6IiE4AtqCZHwwHb8mgzAJodTe5d10u8Y9yI1pkL++iX+wHJxw==,iv:4VhwxjwEUi6RgcRqcYLz/W2qHqDvuzVRBu53GXjuGN4=,tag:6d6Zc4W+xkcUpNcZgtaR8Q==,type:str]
      otlphttp/openobserve_k8s_events:
        endpoint: http://openobserve-openobserve-standalone.openobserve.svc.local.kronform.pius.dev:5080/api/default/
        headers:
          Authorization: ENC[AES256_GCM,data:P4dcmM0OrrOb/g9xP74DS9Voj3vQj7acrPFe5jbVrKfHX/raWmvJBwF7AalqKyWZnPV8zYkX8jp+Iw==,iv:B2Nkasnusp6MJSS2cfBFY2jK/ka5NVMltaNXV8vSPco=,tag:uo5BNHofy0FK8/f+l2y7ZA==,type:str]
          stream-name: k8s_events
    processors:
      batch:
        send_batch_size: 10000
        timeout: 10s
      k8sattributes:
        auth_type: serviceAccount
        extract:
          labels:
            - from: pod
              key: app.kubernetes.io/name
              tag_name: service.name
            - from: pod
              key: k8s-app
              tag_name: service.name
            - from: pod
              key: app.kubernetes.io/instance
              tag_name: k8s.app.instance
            - from: pod
              key: app.kubernetes.io/version
              tag_name: service.version
            - from: pod
              key: app.kubernetes.io/component
              tag_name: k8s.app.component
          metadata:
            - k8s.namespace.name
            - k8s.pod.name
            - k8s.pod.uid
            - k8s.node.name
            - k8s.pod.start_time
            - k8s.deployment.name
            - k8s.replicaset.name
            - k8s.replicaset.uid
            - k8s.daemonset.name
            - k8s.daemonset.uid
            - k8s.job.name
            - k8s.job.uid
            - k8s.container.name
            - k8s.cronjob.name
            - k8s.statefulset.name
            - k8s.statefulset.uid
            - container.image.tag
            - container.image.name
            - k8s.cluster.uid
        passthrough: false
        pod_association:
          - sources:
              - from: resource_attribute
                name: k8s.pod.uid
          - sources:
              - from: resource_attribute
                name: k8s.pod.name
              - from: resource_attribute
                name: k8s.namespace.name
              - from: resource_attribute
                name: k8s.node.name
          - sources:
              - from: resource_attribute
                name: k8s.pod.ip
          - sources:
              - from: resource_attribute
                name: k8s.pod.name
              - from: resource_attribute
                name: k8s.namespace.name
          - sources:
              - from: connection
      resourcedetection:
        detectors:
          - env
        override: true
        timeout: 2s
    receivers:
      k8s_cluster:
        allocatable_types_to_report:
          - cpu
          - memory
          - storage
        collection_interval: 30s
        metrics:
          k8s.container.cpu_limit:
            enabled: false
          k8s.container.cpu_request:
            enabled: false
          k8s.container.memory_limit:
            enabled: false
          k8s.container.memory_request:
            enabled: false
        node_conditions_to_report:
          - Ready
          - MemoryPressure
          - DiskPressure
          - PIDPressure
      k8s_events:
        auth_type: serviceAccount
      k8sobjects:
        auth_type: serviceAccount
        objects:
          - field_selector: status.phase=Running
            interval: 15m
            mode: pull
            name: pods
          - group: events.k8s.io
            mode: watch
            name: events
      otlp:
        protocols:
          grpc: {}
          http:
            endpoint: 0.0.0.0:4318
      prometheus:
        config:
          scrape_configs: []
    service:
      pipelines:
        logs/k8s_events:
          exporters:
            - otlphttp/openobserve_k8s_events
          processors:
            - batch
            - k8sattributes
            - resourcedetection
          receivers:
            - k8s_events
            - otlp
        metrics:
          exporters:
            - otlphttp/openobserve
          processors:
            - batch
            - k8sattributes
            - resourcedetection
          receivers:
            - k8s_cluster
            - spanmetrics
            - servicegraph
        traces:
          exporters:
            - otlphttp/openobserve
            - spanmetrics
            - servicegraph
          processors:
            - batch
            - k8sattributes
            - resourcedetection
          receivers:
            - otlp
  daemonSetUpdateStrategy: {}
  deploymentUpdateStrategy: {}
  env:
    - name: K8S_NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
  image: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:0.100.0
  ingress:
    route: {}
  managementState: managed
  mode: statefulset
  observability:
    metrics: {}
  podDisruptionBudget:
    maxUnavailable: 1
  replicas: 1
  resources: {}
  serviceAccount: openobserve-collector
  targetAllocator:
    allocationStrategy: consistent-hashing
    enabled: true
    filterStrategy: relabel-config
    observability:
      metrics: {}
    podDisruptionBudget:
      maxUnavailable: 1
    prometheusCR:
      enabled: true
      podMonitorSelector: {}
      scrapeInterval: 30s
      serviceMonitorSelector: {}
    replicas: 1
    resources: {}
    serviceAccount: openobserve-collector
  upgradeStrategy: automatic
sops:
  kms: []
  gcp_kms: []
  azure_kv: []
  hc_vault: []
  age:
    - recipient: age10v5jyc5ylreyltm32kfj57fmqle0aumxqvg9lp67r50cl8ynlsmq9kx7ez
      enc: |
        -----BEGIN AGE ENCRYPTED FILE-----
        YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBUMHVsT3FjazV4Q1JIazV1
        UkJKQkp3bCtFb1U2cHhWOHhaWE5oSnlGQms0CjNYM0dqSlhaZWxLYjhBTzdNOWdy
        UUU0MDJRaGgyZDUxZ1NCQmQwV1B1TGcKLS0tIDNVZ01PNjNHRFdtTXFKQTNud0U5
        Zkg5RXZYa1ZNRFJzaW9KOExSckVsSEEKWj3hz3m+UWHb4BtHcqBGU/qYRzGQ36oR
        SvQmn30YEUlpAtZCTl0ttEAgOEdSrOcFRA6ac9IZ40OnEN8i/vdqAQ==
        -----END AGE ENCRYPTED FILE-----
    - recipient: age1c8rjkuv9px2gfyrlqn75ajhv26l8fdmeugcdegt237c20l8uc4wq6y9h6d
      enc: |
        -----BEGIN AGE ENCRYPTED FILE-----
        YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBDM1FGaElLWFNUMEFTeHFW
        KzdMVmdiR3pJNVFtMFpTVUZkQitHSVBLRFhZCkdZRnM0VTVHb21PODgwdVlodkxy
        V3BxbmtZN0EwUDhLYkZHWnIydys3THMKLS0tIDdIN2l4WExvWC9BN1FuM3VTbU91
        dUo4TCtnZXM0cDdTeGgvbmp2bk5oL0UKIpHswSimGHa/CoRfB6z9obzl2yWlXaYj
        qJP1DHLOU57Qb2SC04LuSAAXUwx5LvtFL0/B9pGtXMDN89wZC1dEMQ==
        -----END AGE ENCRYPTED FILE-----
  lastmodified: "2024-05-15T23:23:16Z"
  mac: ENC[AES256_GCM,data:V/WqEZYLw3qm4o71EH7ERDhM+SVrJIQgSyhn6acRqwBShkuBW7hs8tQ1jfZSfSKEX6tZPh8KfAtSzRCTD5nvbv03CrKpupy3VIVFKIlIzenwVkbnJ7WmImWM1Fk2VDBpvlmQhK91SATA930448Qq1kqaPXBez2tKL/TFUWeh8I0=,iv:FgflyVLuZkRhK5jzat6Gi4rnl6CQ0x5tXlroyfGvqno=,tag:kiCivcxvqmo6jM/smB0X2g==,type:str]
  pgp: []
  encrypted_regex: ^(data|stringData|Authorization)$
  version: 3.8.1
