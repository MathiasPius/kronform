apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: openobserve-collector-agent
  namespace: openobserve
spec:
  config:
    exporters:
      otlphttp/openobserve:
        endpoint: http://openobserve-openobserve-standalone.openobserve.svc.local.kronform.pius.dev:5080/api/default/
        headers:
          Authorization: ENC[AES256_GCM,data:K9YXEe5QreRpB4QH7XP9VNUpN5Rkln45/QdoEvpBcP88zxaA7ffdinHzOrJJV1N/7NClr24sfRqckA==,iv:SPEEd4NdkztrWydg8mziCyUKazJRcd4cst7of0CuyqU=,tag:BWS36U/XAMOS7hhqWwIbgQ==,type:str]
      otlphttp/openobserve_k8s_events:
        endpoint: http://openobserve-openobserve-standalone.openobserve.svc.local.kronform.pius.dev:5080/api/default/
        headers:
          Authorization: ENC[AES256_GCM,data:8AaItKNAHdIkK2y+BOTiAow34qwwC1rBcNupBHR/FPn0f9UmGveXUM0Wg0ueXmczm6PWiqe7g7PK/w==,iv:JNVVKzYEPMttNNMU9YKuGHMr5RKNLdsSOqE9LUtdBoI=,tag:BTqUQrE0VpEzlry4WJ+5qw==,type:str]
          stream-name: k8s_events
    processors:
      batch:
        send_batch_size: 10000
        timeout: 10s
      k8sattributes:
        auth_type: serviceAccount
        extract:
          labels:
            - from: pod
              key: app.kubernetes.io/name
              tag_name: service.name
            - from: pod
              key: k8s-app
              tag_name: service.name
            - from: pod
              key: app.kubernetes.io/instance
              tag_name: k8s.app.instance
            - from: pod
              key: app.kubernetes.io/version
              tag_name: service.version
            - from: pod
              key: app.kubernetes.io/component
              tag_name: k8s.app.component
          metadata:
            - k8s.pod.name
            - k8s.pod.uid
            - k8s.deployment.name
            - k8s.namespace.name
            - k8s.node.name
            - k8s.pod.start_time
        filter:
          node_from_env_var: K8S_NODE_NAME
        passthrough: false
        pod_association:
          - sources:
              - from: resource_attribute
                name: k8s.pod.uid
          - sources:
              - from: resource_attribute
                name: k8s.pod.name
              - from: resource_attribute
                name: k8s.namespace.name
              - from: resource_attribute
                name: k8s.node.name
          - sources:
              - from: resource_attribute
                name: k8s.pod.ip
          - sources:
              - from: resource_attribute
                name: k8s.pod.name
              - from: resource_attribute
                name: k8s.namespace.name
          - sources:
              - from: connection
      resourcedetection:
        detectors:
          - system
          - env
          - k8snode
        override: true
        system:
          hostname_sources:
            - os
            - dns
    receivers:
      filelog/std:
        exclude:
          - /var/log/pods/*/otel-collector/*.log
          - /var/log/pods/*/otc-container/*.log
        include:
          - /var/log/pods/*/*/*.log
        include_file_name: false
        include_file_path: true
        operators:
          - id: get-format
            routes:
              - expr: body matches "^\\{"
                output: parser-docker
              - expr: body matches "^[^ Z]+ "
                output: parser-crio
              - expr: body matches "^[^ Z]+Z"
                output: parser-containerd
            type: router
          - id: parser-crio
            output: extract_metadata_from_filepath
            regex: ^(?P<time>[^ Z]+) (?P<stream>stdout|stderr) (?P<logtag>[^ ]*) ?(?P<log>.*)$
            timestamp:
              layout: 2006-01-02T15:04:05.999999999Z07:00
              layout_type: gotime
              parse_from: attributes.time
            type: regex_parser
          - id: parser-containerd
            output: extract_metadata_from_filepath
            regex: ^(?P<time>[^ ^Z]+Z) (?P<stream>stdout|stderr) (?P<logtag>[^ ]*) ?(?P<log>.*)$
            timestamp:
              layout: "%Y-%m-%dT%H:%M:%S.%LZ"
              parse_from: attributes.time
            type: regex_parser
          - id: parser-docker
            output: extract_metadata_from_filepath
            timestamp:
              layout: "%Y-%m-%dT%H:%M:%S.%LZ"
              parse_from: attributes.time
            type: json_parser
          - cache:
              size: 128
            id: extract_metadata_from_filepath
            parse_from: attributes["log.file.path"]
            regex: ^.*\/(?P<namespace>[^_]+)_(?P<pod_name>[^_]+)_(?P<uid>[a-f0-9\-]{36})\/(?P<container_name>[^\._]+)\/(?P<restart_count>\d+)\.log$
            type: regex_parser
          - from: attributes.log
            to: body
            type: move
          - from: attributes.stream
            to: attributes["log.iostream"]
            type: move
          - from: attributes.container_name
            to: resource["k8s.container.name"]
            type: move
          - from: attributes.namespace
            to: resource["k8s.namespace.name"]
            type: move
          - from: attributes.pod_name
            to: resource["k8s.pod.name"]
            type: move
          - from: attributes.restart_count
            to: resource["k8s.container.restart_count"]
            type: move
          - from: attributes.uid
            to: resource["k8s.pod.uid"]
            type: move
        start_at: end
      hostmetrics:
        collection_interval: 15s
        root_path: /hostfs
        scrapers:
          cpu: {}
          disk: {}
          filesystem:
            exclude_fs_types:
              fs_types:
                - autofs
                - binfmt_misc
                - bpf
                - cgroup2
                - configfs
                - debugfs
                - devpts
                - devtmpfs
                - fusectl
                - hugetlbfs
                - iso9660
                - mqueue
                - nsfs
                - overlay
                - proc
                - procfs
                - pstore
                - rpc_pipefs
                - securityfs
                - selinuxfs
                - squashfs
                - sysfs
                - tracefs
              match_type: strict
            exclude_mount_points:
              match_type: regexp
              mount_points:
                - /dev/.*
                - /proc/.*
                - /sys/.*
                - /run/k3s/containerd/.*
                - /var/lib/docker/.*
                - /var/lib/kubelet/.*
                - /snap/.*
          load: {}
          network: {}
          process: {}
      kubeletstats:
        auth_type: serviceAccount
        collection_interval: 15s
        endpoint: https://${env:K8S_NODE_IP}:10250
        extra_metadata_labels:
          - container.id
          - k8s.volume.type
        insecure_skip_verify: true
        metric_groups:
          - node
          - pod
          - container
          - volume
        metrics:
          k8s.pod.cpu_limit_utilization:
            enabled: true
          k8s.pod.cpu_request_utilization:
            enabled: true
          k8s.pod.memory_limit_utilization:
            enabled: true
          k8s.pod.memory_request_utilization:
            enabled: true
      otlp:
        protocols:
          grpc: {}
          http: {}
      prometheus:
        config:
          scrape_configs:
            - job_name: otel-collector
              scrape_interval: 5s
              static_configs:
                - targets:
                    - 0.0.0.0:8888
    service:
      pipelines:
        logs:
          exporters:
            - otlphttp/openobserve
          processors:
            - batch
            - k8sattributes
          receivers:
            - filelog/std
        metrics:
          exporters:
            - otlphttp/openobserve
          processors:
            - batch
            - k8sattributes
          receivers:
            - kubeletstats
        traces:
          exporters:
            - otlphttp/openobserve
          processors:
            - batch
            - k8sattributes
          receivers:
            - otlp
  env:
    - name: K8S_NODE_IP
      valueFrom:
        fieldRef:
          fieldPath: status.hostIP
    - name: K8S_NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
  image: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:0.100.0
  ingress:
    route: {}
  managementState: managed
  mode: daemonset
  observability:
    metrics: {}
  podDisruptionBudget:
    maxUnavailable: 1
  replicas: 1
  resources: {}
  serviceAccount: openobserve-collector
  securityContext:
    capabilities:
      add:
        - DAC_READ_SEARCH
  targetAllocator:
    allocationStrategy: consistent-hashing
    filterStrategy: relabel-config
    observability:
      metrics: {}
    prometheusCR:
      podMonitorSelector: {}
      scrapeInterval: 30s
      serviceMonitorSelector: {}
    resources: {}
  tolerations:
    - effect: NoSchedule
      key: exampleKey1
      operator: Equal
      value: "true"
  upgradeStrategy: automatic
  volumeMounts:
    - mountPath: /hostfs
      name: hostfs
    - mountPath: /var/log
      name: varlog
    - mountPath: /var/lib/docker/containers
      name: varlibdockercontainers
      readOnly: true
  volumes:
    - hostPath:
        path: /
      name: hostfs
    - hostPath:
        path: /var/log
        type: ""
      name: varlog
    - hostPath:
        path: /var/lib/docker/containers
        type: ""
      name: varlibdockercontainers
sops:
  kms: []
  gcp_kms: []
  azure_kv: []
  hc_vault: []
  age:
    - recipient: age10v5jyc5ylreyltm32kfj57fmqle0aumxqvg9lp67r50cl8ynlsmq9kx7ez
      enc: |
        -----BEGIN AGE ENCRYPTED FILE-----
        YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBqR3F5NVJJSk8zeDR2SzFB
        NWhCcnJ5NWZOeUpvN0U1NjBnVmdHcWpieEdvCkZ0TFhxUVlNQkJpMVN2TUg2WSth
        N3pRaWZUSXNBMEl5ZVdtQ29vYjBrR0UKLS0tIGlhTFhpOTBXUkxXUkh3RE1tT1Qw
        bVhFV1lYeTZVZGJ1YWVqcm9xWUQ0RHcKoPeCeV1HaySlALS6rv2pTd1uoI463D09
        FziVFW/LqjI52gtlyVRXtt1ZojWvLibwyraduZyZXeop8j84n4imMQ==
        -----END AGE ENCRYPTED FILE-----
    - recipient: age1c8rjkuv9px2gfyrlqn75ajhv26l8fdmeugcdegt237c20l8uc4wq6y9h6d
      enc: |
        -----BEGIN AGE ENCRYPTED FILE-----
        YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSAzdmd6cjJ2MHljTkxwc1gw
        Mk51L1R3UmdXN3JZNXpPUzI0ckMzbXcyMlF3CitvSUhWaUNTaVZ4VXJnUkV2ZjJj
        a3BqM2hzT2QycHdmQi9lZUpwN0l5bEEKLS0tIFovRmlKWVBVTERhMTR5V0Q3ZjlD
        Z1pZejgrZVlEVUNMdlAzQURSQ2lDdEkKjOsQiWc6qNV5cNOXNVeC/vXZ9rqd/u5P
        8TZHi3j1H0VQQWgQWhRIDS0sR90ZwYyQEzQjq0VQtAGtLEt6kuWlSA==
        -----END AGE ENCRYPTED FILE-----
  lastmodified: "2024-05-15T12:28:42Z"
  mac: ENC[AES256_GCM,data:/fGRQ/bnQMyk9cO5p7B/RC56IbQjhCQNn9wnicUlrELOCBhtx3wo+FxqTt+KALWUdMNEgOHThadWeTBfAj57CwgnsqPvvmt1/gSyRjPVi0DbumdCYAudQ0IJtEuODVW7VQYLsMaP4kkyD+fSjUsuZbRxKV7C8V2831UUgHH8UbI=,iv:w0AhcRbp3cp5sV3w5xFH/iiNheP3enEUagGdb1YxNGM=,tag:qySMsKNaiK27T6GPUxJ6Qw==,type:str]
  pgp: []
  encrypted_regex: ^(data|stringData|Authorization)$
  version: 3.8.1
